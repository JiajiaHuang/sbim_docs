name: 同步文档并触发网站更新

on:
  push:
    branches: [ main ]
    paths:
      - '**'
  workflow_dispatch:

jobs:
  sync-docs-and-trigger-update:
    runs-on: ubuntu-latest
    steps:
      - name: 检出文档仓库
        uses: actions/checkout@v4
        with:
          path: sbim_docs

      - name: 检出网站仓库
        uses: actions/checkout@v4
        with:
          repository: JiajiaHuang/sbim_web
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: sbim_web

      - name: 同步文档内容到网站仓库
        run: |
          echo "🔄 开始同步文档内容..."
          
          # 检查文档仓库结构
          echo "📂 文档仓库结构:"
          ls -la sbim_docs/
          
          # 确保网站仓库的 docs 目录存在
          mkdir -p sbim_web/docs
          
          # 清空网站仓库的 docs 目录
          rm -rf sbim_web/docs/*
          
          # 复制文档仓库的内容到网站仓库
          if [ -d "sbim_docs/docs" ]; then
            cp -r sbim_docs/docs/* sbim_web/docs/
            echo "✅ 已复制 docs 目录"
          else
            echo "⚠️ 文档仓库中没有 docs 目录"
          fi
          
          if [ -d "sbim_docs/api" ]; then
            mkdir -p sbim_web/docs/api
            cp -r sbim_docs/api/* sbim_web/docs/api/
            echo "✅ 已复制 api 目录"
          else
            echo "⚠️ 文档仓库中没有 api 目录"
          fi
          
          echo "📁 同步后的文件列表:"
          find sbim_web/docs -name "*.md" | head -10

      - name: 自动生成 sidebars.ts 配置
        run: |
          echo "🔧 开始生成 sidebars.ts 配置..."
          
          cd sbim_web
          
          # 创建 Node.js 脚本来生成 sidebars.ts
          cat > generate_sidebars.js << 'SCRIPT_EOF'
          const fs = require('fs');
          const path = require('path');
          
          function getAllMdFiles(dir, basePath = '') {
            const files = [];
            const fullPath = path.join('docs', dir);
            
            if (!fs.existsSync(fullPath)) return files;
            
            const entries = fs.readdirSync(fullPath, { withFileTypes: true });
            
            entries.forEach(entry => {
              if (entry.isFile() && entry.name.endsWith('.md')) {
                const fileName = entry.name.replace('.md', '');
                const docId = basePath ? basePath + '/' + fileName : fileName;
                files.push(docId);
              } else if (entry.isDirectory()) {
                const subPath = basePath ? basePath + '/' + entry.name : entry.name;
                files.push(...getAllMdFiles(path.join(dir, entry.name), subPath));
              }
            });
            
            return files;
          }
          
          // 获取所有文档文件
          const allDocs = getAllMdFiles('');
          
          // 生成 sidebars.ts 内容
          const sidebarItems = allDocs.map(doc => "    '" + doc + "'").join(',\n');
          
          const sidebarContent = "import type {SidebarsConfig} from '@docusaurus/plugin-content-docs';\n\n" +
            "const sidebars: SidebarsConfig = {\n" +
            "  tutorialSidebar: [\n" +
            sidebarItems + "\n" +
            "  ],\n" +
            "};\n\n" +
            "export default sidebars;\n";
          
          fs.writeFileSync('sidebars.ts', sidebarContent);
          console.log('✅ sidebars.ts 已生成，包含', allDocs.length, '个文档');
          console.log('文档列表:', allDocs.join(', '));
          SCRIPT_EOF
          
          # 运行脚本生成 sidebars.ts
          node generate_sidebars.js
          
          # 清理临时文件
          rm generate_sidebars.js
          
          echo "📄 生成的 sidebars.ts 内容:"
          cat sidebars.ts

      - name: 配置 Git 用户信息
        run: |
          cd sbim_web
          git config user.name "Jiaheng"
          git config user.email "569249477@qq.com"

      - name: 提交文档更新到网站仓库
        run: |
          cd sbim_web
          git add docs/ sidebars.ts
          
          if git diff --staged --quiet; then
            echo "📝 没有文档内容变化，跳过提交"
          else
            git commit -m "docs: 自动同步文档内容并更新侧边栏配置

          来源提交: ${{ github.repository }}@${{ github.sha }}
          提交者: ${{ github.actor }}
          同步时间: $(date -u '+%Y-%m-%d %H:%M:%S UTC')

          更新内容:
          - 自动从文档仓库同步最新内容到网站仓库
          - 根据实际文档结构自动生成 sidebars.ts 配置
          - 确保侧边栏与文档内容完全匹配"
            
            git push origin main
            echo "✅ 文档内容和配置已同步到网站仓库"
          fi

      - name: 记录同步信息
        run: |
          echo "✅ 文档同步完成"
          echo "📝 文档仓库提交: ${{ github.sha }}"
          echo "👤 提交者: ${{ github.actor }}"
          echo "🌿 分支: ${{ github.ref }}"
          echo "🌐 网站将自动重新部署"
