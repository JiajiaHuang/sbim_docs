openapi: 3.0.0
info:
  title: SBIM API
  version: 2.0.0
  description: |
    SBIM智能建筑管理系统API文档
    
    ## 认证方式
    
    所有API请求都需要在请求头中包含有效的Bearer Token：
    
    ```
    Authorization: Bearer YOUR_ACCESS_TOKEN
    ```
    
    ## 基础URL
    
    - 生产环境: `https://api.sbim.com/v2`
    - 测试环境: `https://api-test.sbim.com/v2`
    
    ## 错误处理
    
    API使用标准的HTTP状态码。错误响应格式：
    
    ```json
    {
      "error": {
        "code": "INVALID_REQUEST",
        "message": "请求参数无效",
        "details": "具体错误信息"
      }
    }
    ```

  contact:
    name: SBIM技术支持
    email: support@sbim.com
    url: https://sbim.com/support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.sbim.com/v2
    description: 生产环境
  - url: https://api-test.sbim.com/v2
    description: 测试环境

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: 错误代码
              example: "INVALID_REQUEST"
            message:
              type: string
              description: 错误消息
              example: "请求参数无效"
            details:
              type: string
              description: 详细错误信息
              example: "缺少必需的参数: building_id"
    
    Building:
      type: object
      properties:
        id:
          type: string
          description: 建筑唯一标识符
          example: "bld_1234567890"
        name:
          type: string
          description: 建筑名称
          example: "智慧大厦A座"
        address:
          type: string
          description: 建筑地址
          example: "北京市朝阳区建国路88号"
        floors:
          type: integer
          description: 楼层数
          example: 20
        total_area:
          type: number
          format: float
          description: 总建筑面积(平方米)
          example: 15000.5
        status:
          type: string
          enum: [active, inactive, maintenance]
          description: 建筑状态
          example: "active"
        created_at:
          type: string
          format: date-time
          description: 创建时间
          example: "2025-08-29T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          description: 更新时间
          example: "2025-08-29T10:30:00Z"
    
    Device:
      type: object
      properties:
        id:
          type: string
          description: 设备唯一标识符
          example: "dev_1234567890"
        name:
          type: string
          description: 设备名称
          example: "空调系统-1F-001"
        type:
          type: string
          enum: [hvac, lighting, security, elevator, fire_safety]
          description: 设备类型
          example: "hvac"
        building_id:
          type: string
          description: 所属建筑ID
          example: "bld_1234567890"
        floor:
          type: integer
          description: 所在楼层
          example: 1
        room:
          type: string
          description: 所在房间
          example: "101"
        status:
          type: string
          enum: [online, offline, error, maintenance]
          description: 设备状态
          example: "online"
        last_seen:
          type: string
          format: date-time
          description: 最后在线时间
          example: "2025-08-29T10:30:00Z"
    
    Pagination:
      type: object
      properties:
        page:
          type: integer
          description: 当前页码
          example: 1
        limit:
          type: integer
          description: 每页数量
          example: 20
        total:
          type: integer
          description: 总记录数
          example: 150
        pages:
          type: integer
          description: 总页数
          example: 8

paths:
  /health:
    get:
      summary: 健康检查
      description: 检查API服务状态
      tags: [系统]
      security: []
      responses:
        '200':
          description: 服务正常
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-08-29T10:30:00Z"
                  version:
                    type: string
                    example: "2.0.0"

  /auth/login:
    post:
      summary: 用户登录
      description: 使用邮箱和密码登录获取访问令牌
      tags: [认证]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: 用户邮箱
                  example: "user@example.com"
                password:
                  type: string
                  description: 用户密码
                  example: "password123"
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: 访问令牌
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  token_type:
                    type: string
                    example: "Bearer"
                  expires_in:
                    type: integer
                    description: 令牌有效期(秒)
                    example: 3600
        '401':
          description: 认证失败
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /buildings:
    get:
      summary: 获取建筑列表
      description: 分页获取建筑信息列表
      tags: [建筑管理]
      parameters:
        - name: page
          in: query
          description: 页码
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: 每页数量
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: status
          in: query
          description: 建筑状态筛选
          schema:
            type: string
            enum: [active, inactive, maintenance]
      responses:
        '200':
          description: 成功返回建筑列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Building'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: 创建新建筑
      description: 创建一个新的建筑记录
      tags: [建筑管理]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - address
              properties:
                name:
                  type: string
                  description: 建筑名称
                  example: "智慧大厦B座"
                address:
                  type: string
                  description: 建筑地址
                  example: "上海市浦东新区世纪大道100号"
                floors:
                  type: integer
                  description: 楼层数
                  example: 25
                total_area:
                  type: number
                  format: float
                  description: 总建筑面积
                  example: 20000.0
      responses:
        '201':
          description: 建筑创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /buildings/{building_id}:
    get:
      summary: 获取建筑详情
      description: 根据建筑ID获取详细信息
      tags: [建筑管理]
      parameters:
        - name: building_id
          in: path
          required: true
          description: 建筑ID
          schema:
            type: string
            example: "bld_1234567890"
      responses:
        '200':
          description: 成功返回建筑详情
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
        '404':
          description: 建筑不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /buildings/{building_id}/devices:
    get:
      summary: 获取建筑设备列表
      description: 获取指定建筑下的所有设备
      tags: [设备管理]
      parameters:
        - name: building_id
          in: path
          required: true
          description: 建筑ID
          schema:
            type: string
        - name: type
          in: query
          description: 设备类型筛选
          schema:
            type: string
            enum: [hvac, lighting, security, elevator, fire_safety]
        - name: status
          in: query
          description: 设备状态筛选
          schema:
            type: string
            enum: [online, offline, error, maintenance]
      responses:
        '200':
          description: 成功返回设备列表
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

tags:
  - name: 系统
    description: 系统相关接口
  - name: 认证
    description: 用户认证相关接口
  - name: 建筑管理
    description: 建筑信息管理接口
  - name: 设备管理
    description: 设备监控和管理接口
